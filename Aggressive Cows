class Solution {
  public:
    bool isPossible(vector<int> &stalls, int n, int k, int minAllowedDist) {
        int cows = 1, lastStallPos = stalls[0];
        for(int i=1; i<n; i++) {
            if((stalls[i]-lastStallPos) >= minAllowedDist) {
                cows++;
                lastStallPos = stalls[i];
            }
            if(cows == k)
                return true;
        }
        return false;
    }
    int aggressiveCows(vector<int> &stalls, int k) {
        int n = stalls.size();
        sort(stalls.begin(), stalls.end());
        
        int st = 0, end = (stalls[n-1] - stalls[0]), ans = -1;
        while(st <= end) {
            int mid = st + (end-st)/2;
            if(isPossible(stalls,n,k,mid)) { //right
                ans = mid;
                st = mid + 1;
            }
            else { //left
                end = mid - 1;
            }
        }
        
        return ans;
    }
};
